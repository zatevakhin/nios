#-*- coding: utf-8 -*-

import logging
import socket
from copy import copy

import requests

from nios.core.auxiliary import exception
from nios.core.CNiosCore import CNiosCore
from nios.core.data import CTask, CTcpConnectResult, ETaskPriority, ETaskType
from nios.core.plugins.CPluginBase import CPluginBase


SERVICE_VENDOR = "tp-link"
SERVICE_TYPE = "router"
ACTION_CLASS = "vulnerability-check"


class CTpLink(CPluginBase):

    mName = f'{SERVICE_VENDOR}-service'
    mTags = {SERVICE_TYPE, ACTION_CLASS, SERVICE_VENDOR}

    def __init__(self, core: CNiosCore):
        self.mCore = core

    def __call__(self, task: CTask):
        exploit = copy(self.mCore.mExploits.get("CVE-2012-5687"))
        tcp: CTcpConnectResult = task.data.get("tcp")

        e = exploit(tcp.ip, tcp.port)

        task.data.update({"exploit": e})
        return task

    def onComplete(self, result: CTask):
        result.priority = ETaskPriority.HIGH
        result.type = ETaskType.WORK_FINISHED
        self.mCore.put(result)

    def onError(self, error):
        logging.exception(error)
